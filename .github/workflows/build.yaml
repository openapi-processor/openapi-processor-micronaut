name: build

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'gradle.properties'
      - 'LICENSE'
      - 'README.md'
      - 'docs/**'
    tags-ignore:
      - 'v*'
  workflow_dispatch:

jobs:

  test:
    name: test

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: set up jdk
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11

    - name: gradle check
      run: |
        ./gradlew check
        ./gradlew --stop

    - name: archive test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test results
        path: build/reports

  publish:
    if: ${{ github.actor == 'hauner' }}

    needs: [test]
    name: publish snapshot

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: set up jdk
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11

    - name: publish snapshot
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SIGN_KEY: ${{ secrets.SIGN_KEY }}
        SIGN_PWD: ${{ secrets.SIGN_PWD }}
        PUBLISH_USER: ${{ secrets.PUBLISH_USER }}
        PUBLISH_KEY: ${{ secrets.PUBLISH_KEY }}
      run: |
        ./gradlew publishToSonatype
        ./gradlew --stop

    - name: archive test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: publish results
        path: build

  sonarqube:
    needs: [publish]
    name: sonarqube

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: cache SonarCloud
      uses: actions/cache@v3
      with:
        path: |
          ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: |
          ${{ runner.os }}-sonar

    - name: set up jdk
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11

    - name: sonarqube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./gradlew test sonarqube
        ./gradlew --stop

    - name: sonarqube results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: sonarqube results
        path: build
